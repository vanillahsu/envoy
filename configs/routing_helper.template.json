{% macro make_route_internal(cluster, options) %}
  {% if 'timeout_ms' in options %}
  "timeout_ms": {{ options['timeout_ms'] }},
  {% endif %}
  "retry_policy": {
    "retry_on": "{{ options.get('retry_on', 'connect-failure') }}"
  },
  "cluster": "{{ cluster }}"
{% endmacro %}

{% macro make_route(cluster) %}
  {{ make_route_internal(cluster, clusters.get(cluster, {})) }}
{% endmacro %}

{% macro internal_cluster_definition(service, options) %}
  "name": "{{ service }}",
  "connect_timeout_ms": 250,
  "type": "sds",
  "lb_type": "least_request",
  "features": "http2",
  "http_codec_options": "no_compression",
  "service_name": "{{ service }}",
  {% if 'max_requests' in options %}
  "circuit_breakers": {
    "default": {
      "max_requests": {{ options['max_requests'] }}
    }
  },
  {% endif %}
  "health_check":  {
    "type": "http",
    "timeout_ms": 2000,
    "interval_ms": 5000,
    "interval_jitter_ms": 5000,
    "unhealthy_threshold": 2,
    "healthy_threshold": 2,
    "path": "/healthcheck",
    "service_name": "{{ service }}"
  }
{% endmacro %}
